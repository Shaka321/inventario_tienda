name: Build USB Binaries

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: windows
            os: windows-latest
            pyinstaller_add_data: 'app\\templates;app\\templates|app\\static;app\\static|scripts;scripts'
          - target: macos-intel
            os: macos-13
            pyinstaller_add_data: 'app/templates:app/templates|app/static:app/static|scripts:scripts'
          - target: macos-arm
            os: macos-14
            pyinstaller_add_data: 'app/templates:app/templates|app/static:app/static|scripts:scripts'
          - target: linux-x86_64
            os: ubuntu-latest
            pyinstaller_add_data: 'app/templates:app/templates|app/static:app/static|scripts:scripts'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Parse add-data entries
        id: adddata
        shell: bash
        run: |
          RAW="${{ matrix.pyinstaller_add_data }}"
          IFS='|' read -ra PARTS <<< "$RAW"
          CMD=""
          for p in "${PARTS[@]}"; do
            CMD="$CMD --add-data \"$p\""
          done
          echo "cmd=$CMD" >> $GITHUB_OUTPUT

      - name: Build (PyInstaller)
        run: |
          pyinstaller --onefile --name Inventario ${{ steps.adddata.outputs.cmd }} launcher.py
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            dist/Inventario*
